#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build 360T7

on:
  workflow_dispatch:
   schedule:
     - cron: '0 4 * * *'

env:
  REPO_URL: https://github.com/NekokeCore/immortalwrt-mt798x-24.10
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: 360T7/feeds.conf.default
  CONFIG_FILE: 360T7/.config
  DIY_P1_SH: 360T7/diy1.sh
  DIY_P2_SH: 360T7/diy2.sh
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  PUSHPLUS_TOKEN: ${{ secrets.PUSHPLUS_TOKEN }}
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Ê£ÄÊü•È°πÁõÆÂàÜÊîØ
      uses: actions/checkout@main

    - name: ÂàùÂßãÂåñÁºñËØëÁéØÂ¢É
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt -yqq update
        sudo -E apt -yqq full-upgrade
        sudo -E apt -yqq autoremove --purge
        sudo -E apt -yqq autoclean
        sudo -E apt -yqq clean
        sudo -E apt -yqq install dos2unix libfuse-dev
        sudo bash -c 'bash <(curl -sL https://build-scripts.immortalwrt.org/init_build_environment.sh)'
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "FIRMWARE_VERSION=$(date +"%y%m%d")" >> $GITHUB_ENV
        echo "START_DATE=$(date +'%YÂπ¥%mÊúà%dÊó• %HÁÇπ%MÂàÜ')" >> $GITHUB_ENV

    - name: PushPlus ÈÄöÁü•
      if: env.PUSHPLUS_TOKEN
      continue-on-error: true
      run: |
        curl -k -d "title=ÂºÄÂßãÁºñËØë360T7Âõ∫‰ª∂" -d "content=ÁºñËØëÂõ∫‰ª∂ÁâàÊú¨Ôºö${{ env.FIRMWARE_VERSION }}%0AÁºñËØëÂºÄÂßãÊó∂Èó¥Ôºö${{ env.START_DATE }}" -d "token=${{ env.PUSHPLUS_TOKEN }}&channel=cp&webhook=server" "http://www.pushplus.plus/send"
    
    - name: ‰∏ãËΩΩÊ∫êÁ†Å
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Âä†ËΩΩËΩØ‰ª∂Ê∫ê
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Êõ¥Êñ∞Âπ∂ÂÆâË£ÖËΩØ‰ª∂Ê∫ê
      run: cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a

    - name: Âä†ËΩΩËá™ÂÆö‰πâÈÖçÁΩÆ
      run: |
        [ -e 360T7/files ] && mv 360T7/files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: ‰∏ãËΩΩÂåÖ
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: ÁºñËØëÂõ∫‰ª∂
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s || (curl -k -d "title=360T7Âõ∫‰ª∂ÁºñËØëÂ§±Ë¥•" -d "content=ÁºñËØëÂõ∫‰ª∂ÁâàÊú¨Ôºö${{ env.FIRMWARE_VERSION }}%0AÁºñËØëÂºÄÂßãÊó∂Èó¥Ôºö${{ env.START_DATE }}%0AÁºñËØëÁªìÊùüÊó∂Èó¥Ôºö$(date +'%YÂπ¥%mÊúà%dÊó• %HÁÇπ%MÂàÜ')" -d "token=${{ env.PUSHPLUS_TOKEN }}&channel=cp&webhook=server" "http://www.pushplus.plus/send")
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Êï¥ÁêÜÂõ∫‰ª∂
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        # Êï¥ÁêÜÂõ∫‰ª∂ÂåÖÊó∂ÂÄô,Âà†Èô§ÊÇ®‰∏çÊÉ≥Ë¶ÅÁöÑÂõ∫‰ª∂ÊàñËÄÖÊñá‰ª∂,ËÆ©ÂÆÉ‰∏çÈúÄË¶Å‰∏ä‰º†Âà∞ActionsÁ©∫Èó¥
        cd openwrt/bin/targets/*/*
        rm -rf version.buildinfo
        rm -rf profiles.json
        rm -rf *rootfs*
        rm -rf *kernel*
        rm -rf *.manifest
        rm -rf feeds.buildinfo
        rm -rf sha256sums
        mv *sysupgrade.bin 360T7-${{ env.FIRMWARE_VERSION }}-sysupgrade.bin || echo Ê≤°ÊúâÊâæÂà∞ *sysupgrade.bin Êñá‰ª∂
        mv *factory.bin 360T7-${{ env.FIRMWARE_VERSION }}-factory.bin || echo Ê≤°ÊúâÊâæÂà∞ *factory.bin Êñá‰ª∂
        echo -e "$(sha256sum *)\n" > sha256sums
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞Github ActionsÁ©∫Èó¥
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      uses: actions/upload-artifact@main
      with:
        name: ${{ github.workflow }}-$FIRMWARE_VERSION
        path: $FIRMWARE

    - name: Âà†Èô§ÊóßÁöÑRelease
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAG_NAME: ${{ github.workflow }}
      run: |
        git push origin --delete ${{env.TAG_NAME}} || echo "ËøúÁ®ãÊ†áÁ≠æ‰∏çÂ≠òÂú®"
        RELEASE_URL="https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_NAME"
        RELEASE_ID=$(curl -s -H "Authorization: token $GITHUB_TOKEN" $RELEASE_URL | jq -r '.id')
        if [ "$RELEASE_ID" != "null" ]; then
          echo "üóëÔ∏è Âà†Èô§Release‰∏≠: $RELEASE_ID..."
          curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID"
          echo "‚úÖ ReleaseÂà†Èô§ÊàêÂäü!"
        else
          echo "‚ö†Ô∏è Êú™ÊâæÂà∞tagÁöÑRelease: $TAG_NAME"
        fi

    - name: ÂàõÂª∫releaseÊ†áÁ≠æ
      id: tag
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "ÁºñËØëÊó∂Èó¥Ôºö$(date -d "@$START_DATE" +"%YÂπ¥%mÊúà%dÊó• %HÁÇπ%MÂàÜ")" >> release.txt
        echo "ÈªòËÆ§ÁΩëÂÖ≥Ôºö192.168.4.1" >> release.txt
        echo ÂåÖÂê´Êèí‰ª∂Ôºö$(grep "CONFIG_PACKAGE_luci-app-\(.*\)=y" $openwrt_root/.config | sed "s/CONFIG_PACKAGE_luci-app-\(.*\)=y/\1/g" | grep -v "_\|arpbind\|autoreboot\|firewall\|mtk\|opkg\|mtwifi\|ramfree\|package-manager") >> release.txt
        echo "Êõ¥Êñ∞Êó•ÂøóÔºö$COMMIT" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Â∞ÜÂõ∫‰ª∂‰∏ä‰º†Âà∞releaseÂéÜÂè≤
      uses: softprops/action-gh-release@v2
      if: steps.tag.outputs.status == 'success' && !cancelled()
      id: upload-history
      with:
        name: Âõ∫‰ª∂‰øùÁïôÁõÆÂΩï
        tag_name: history
        files: ${{ env.FIRMWARE }}/*

    - name: Â∞ÜÂõ∫‰ª∂‰∏ä‰º†Âà∞release
      uses: softprops/action-gh-release@v2
      if: steps.tag.outputs.status == 'success' && !cancelled()
      id: upload-release
      with:
        name: ${{ github.workflow }}-${{ env.FIRMWARE_VERSION }}
        tag_name: ${{ github.workflow }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Telegram ÈÄöÁü•
      if: always() && !cancelled()
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHATID: ${{ secrets.TELEGRAM_CHATID }}
      run: |
        duration=$((($(date +%s)-$START_DATE)/60)) && time=$((duration/60))Â∞èÊó∂$((duration%60))ÂàÜÈíü
        if [ "${{ steps.compile.outputs.status }}" == 'success' ]; then
          content="üéâ${{ github.workflow }}Âõ∫‰ª∂ÁºñËØëÊàêÂäüüéâ%0AÂõ∫‰ª∂ÁâàÊú¨Ôºö$FIRMWARE_VERSION%0AÁºñËØëÁî®Êó∂Ôºö${time}"
        else
          content="‚ùå${{ github.workflow }}Âõ∫‰ª∂ÁºñËØëÂ§±Ë¥•‚ùå%0AÂõ∫‰ª∂ÁâàÊú¨Ôºö$FIRMWARE_VERSION%0AÁºñËØëÁî®Êó∂Ôºö${time}"
        fi
        curl "https://api.telegram.org/bot${{ env.TELEGRAM_BOT_TOKEN }}/sendMessage?chat_id=${{ env.TELEGRAM_CHATID }}&text=${content}"

    - name: Êï¥ÁêÜToolchainÁºìÂ≠òÊñá‰ª∂
      id: cache
      if: steps.compile.outputs.status == 'success' && steps.compare.outputs.NEED_CACHE == 'true' && !cancelled()
      run: |
        cd $openwrt_root
        find -maxdepth 1 -not -name staging_dir -not -name build_dir -not -name . | xargs rm -rf {}
        rm -rf build_dir/target*
        rm -rf staging_dir/target*
        cd ..
        mkdir -p output
        tar -Jcf output/toolchain.tar.xz -C openwrt .
        echo $CURRENT_HASH >> output/cache-hash.txt
        df -hT $PWD
        cd output
        echo "output=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: ‰∏ä‰º†ToolchainÁºìÂ≠òÊñá‰ª∂
      uses: softprops/action-gh-release@v2
      if: steps.cache.outputs.status == 'success' && steps.compare.outputs.NEED_CACHE == 'true' && !cancelled()
      id: upload-cache
      with:
        repository: ${{ env.CACHE_REPO }}
        token: ${{ secrets.PACKAGES_RELEASES }}
        name: ${{ env.SOURCE_NAME }}-${{ env.TARGET }}-toolchain
        tag_name: ${{ env.SOURCE_NAME }}-${{ env.TARGET }}-toolchain
        body: CURRENT_HASH is ${{ env.CURRENT_HASH }}
        files: ${{ env.output }}/*
